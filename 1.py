def pick_resistors(resistance: int) -> dict:
    """
    Подбирает ближайшие номиналы сопротивления из ряда E6, E12, E24, E48, E96.
    
    resistance: Целое число (сопротивление) в диапазоне от 100 до 999.
    return: Словарь с рядом сопротивлений и соответствующими номиналами.
    """
    
    if not (100 <= resistance <= 999):
        return None

    # Ряды сопротивлений
    resistor_series = {
        'E6': [100, 220, 330, 470, 680, 1000],
        'E12': [100, 120, 150, 180, 220, 270, 330, 390, 470, 560, 680, 820, 1000],
        'E24': [100, 110, 120, 130, 150, 160, 180, 200, 220, 240, 270, 300, 330, 360, 390, 
                 430, 470, 510, 560, 620, 680, 750, 820, 910, 1000],
        'E48': [100, 105, 110, 115, 120, 125, 130, 135, 150, 160, 170, 180, 200, 220, 
                 240, 260, 270, 300, 330, 360, 390, 430, 470, 510, 560, 620, 680, 
                 750, 820, 910, 1000],
        'E96': [100, 102, 105, 107, 110, 113, 115, 120, 123, 127, 130, 133, 140, 
                 150, 160, 170, 180, 200, 220, 240, 260, 270, 300, 330, 360, 
                 390, 430, 470, 510, 560, 620, 680, 750, 820, 910, 1000]
    }

    # Функция для нахождения ближайших значений
    def closest_nominals(series):
        # Поиск минимальной разницы и фильтр по ней
        min_diff = min(map(lambda x: abs(x - resistance), series))
        return tuple(filter(lambda x: abs(x - resistance) == min_diff, series))

    # Подбор значения для каждого ряда
    result = {key: closest_nominals(values) for key, values in resistor_series.items()}

    return result
# Примеры тестирования:
# >>> pick_resistors(140)
# {'E6': (100,), 'E12': (150,), 'E24': (130, 150), 'E48': (135,), 'E96': (140,)}
# >>> pick_resistors(422)
# {'E6': (470,), 'E12': (390,), 'E24': (430,), 'E48': (430,), 'E96': (430,)}